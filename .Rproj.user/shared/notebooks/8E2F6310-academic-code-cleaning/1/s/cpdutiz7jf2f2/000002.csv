"0","# rejoin with hipo labs data"
"0","academic_counts <- overlap %>%"
"0","  left_join(institutions_hipolabs, by = c(""organization"" = ""institution"")) %>% "
"0","  filter(!(organization == ""misc. student"")) # remove misc. students for future analyses"
"0","sum(academic_counts[,""n""]) "
"1","[1]"
"1"," 43587"
"1","
"
"0","# now there are 43,587 users?"
"0","# larger than before because it's double-counting the institutions that are in multiple countries or have multiple domains"
"0","# group together different country and domain values for the same institution"
"0","group1 <- academic_counts[duplicated(academic_counts$organization), ] %>% rename(c(country2 = country, domains2 = domains))"
"0","group2 <- group1[duplicated(group1$organization), ] %>% rename(c(country3 = country2, domains3 = domains2))"
"0","group3 <- group2[duplicated(group2$organization), ] %>% rename(c(country4 = country3, domains4 = domains3))"
"0","group4 <- group3[duplicated(group3$organization), ] %>% rename(c(country5 = country4, domains5 = domains4))"
"0","# remove duplicates so each group has unique values"
"0","group1 <- group1[!duplicated(group1$organization), ]"
"0","group2 <- group2[!duplicated(group2$organization), ]"
"0","group3 <- group3[!duplicated(group3$organization), ]"
"0","group4 <- group4[!duplicated(group4$organization), ]"
"0","# add back in the multiple countries/domains, but as additional columns"
"0","# now there is only one row for each institution"
"0","academic_counts <- academic_counts[!duplicated(academic_counts$organization), ] %>% "
"0","  left_join(group1) %>%"
"0","  left_join(group2) %>%"
"0","  left_join(group3) %>%"
"0","  left_join(group4)"
"2","Joining, by = c(""organization"", ""n"")
"
"2","Joining, by = c(""organization"", ""n"")
"
"2","Joining, by = c(""organization"", ""n"")
"
"2","Joining, by = c(""organization"", ""n"")
"
"0","# add NAs for when multiple country listings are the same (if the duplicated institution is from multiple domains)"
"0","# or when multiple domain listings are the same (if the duplicated institution is from multiple countries)"
"0","academic_counts <- academic_counts %>%"
"0","  mutate_all(str_replace_na) %>%"
"0","  dt_mutate(country2 = if_else(country == country2, ""NA"", country2)) %>%"
"0","  dt_mutate(country3 = if_else(country == country3, ""NA"", country3)) %>%"
"0","  dt_mutate(domains2 = if_else(domains == domains2, ""NA"", domains2)) %>%"
"0","  dt_mutate(domains3 = if_else(domains == domains3, ""NA"", domains3)) %>%"
"0","  dt_mutate(domains4 = if_else(domains == domains4, ""NA"", domains4)) %>%"
"0","  dt_mutate(domains5 = if_else(domains == domains5, ""NA"", domains5))"
"2","`mutate_all()` ignored the following grouping variables:
Column `organization`
Use `mutate_at(df, vars(-group_cols()), myoperation)` to silence the message.
"
"0","# collapse into single columns for country/domains"
"0","# we want to avoid having multiple countries for an institution, since they'd be double-counted in the following analyses"
"0","# for the 21 institutions represented that are in multiple countries, the primary country is manually coded"
"0","academic_counts <- academic_counts %>%"
"0","  dt_mutate(country = if_else(condition = organization %chin% c(""universidad simón bolivar"", ""suleyman demirel university"", ""universidad de córdoba"", ""aga khan university"", ""southeast university"", ""universidad de los andes"", ""korea university""), true = country2, false = country)) %>%"
"0","  dt_mutate(domains_combined = str_c(domains, domains2, domains3, domains4, domains5, sep = "", "")) %>%"
"0","  transmute(organization = organization, n = n, country = country, domains = domains_combined)"
"0","# remove remaining NAs"
"0","academic_counts <- academic_counts %>% "
"0","  dt_mutate(domains = str_replace_all(domains, "", NA"", """")) %>%"
"0","  dt_mutate(n = as.numeric(n)) # for some reason n got changed to chr type"
