coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 12),
legend.position = c(.9, .1),
legend.justification = c("right", "bottom",
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top 20 universities by number of users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
legend.justification = c("right", "bottom",
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top 20 universities by number of users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(plot.title.position = "center",
axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
legend.justification = c("right", "bottom",
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top 20 universities by number of users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(#plot.title.position = "center",
axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
#legend.justification = c("right", "bottom",
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top 20 universities by number of users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
#legend.justification = c("right", "bottom",
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top 20 universities by number of users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
#legend.justification = c("right", "bottom",
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top 20 universities by number of users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
legend.justification = c("right", "bottom",
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top 20 universities by number of users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top 20 universities by number of users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.key = element_rect(fill = "white"))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top 20 universities by number of users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend = element_rect(fill = "white"))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top 20 universities by number of users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.background = element_rect(fill="white",
size=0.5, linetype="solid",
colour ="black"))
View(country_frequency_users)
#country_frequency_institutions <- academic_counts %>% group_by(country) %>% count(wt = n(), sort = TRUE)
country_frequency_users <- academic_counts %>%
mutate(country = tolower(country)) %>%
group_by(country) %>%
count(sort = TRUE, wt = n)
country_users_sorted <- country_frequency_users %>%
arrange(n) %>%
dt_mutate(country = factor(country, levels = country))
ggplot(country_users_sorted[(.N-20):.N, ]) +
geom_point(aes(x = country, y = n), size = 4) +
geom_segment(data = country_users_sorted[(.N-20):.N, ], mapping = aes(x = country, xend = country, y = 0, yend = n), size = 1) +
labs(x = "Country", y = "Number of Users", title = "Top-20 countries by users in the academic sector") +
theme_classic() +
scale_y_log10() +
coord_flip() +
theme_minimal()
#country_frequency_institutions <- academic_counts %>% group_by(country) %>% count(wt = n(), sort = TRUE)
country_frequency_users <- academic_counts %>%
mutate(country = tolower(country)) %>%
dt_mutate(organization = str_replace_all(organization, "\\b(korea, republic of)\\b", "south korea")) %>%
group_by(country) %>%
count(sort = TRUE, wt = n)
country_users_sorted <- country_frequency_users %>%
arrange(n) %>%
dt_mutate(country = factor(country, levels = country))
ggplot(country_users_sorted[(.N-20):.N, ]) +
geom_point(aes(x = country, y = n), size = 4) +
geom_segment(data = country_users_sorted[(.N-20):.N, ], mapping = aes(x = country, xend = country, y = 0, yend = n), size = 1) +
labs(x = "Country", y = "Number of Users", title = "Top-20 countries by users in the academic sector") +
theme_classic() +
scale_y_log10() +
coord_flip() +
theme_minimal()
#country_frequency_institutions <- academic_counts %>% group_by(country) %>% count(wt = n(), sort = TRUE)
country_frequency_users <- academic_counts %>%
mutate(country = tolower(country)) %>%
dt_mutate(country = str_replace_all(country, "korea, republic of", "south korea")) %>%
group_by(country) %>%
count(sort = TRUE, wt = n)
country_users_sorted <- country_frequency_users %>%
arrange(n) %>%
dt_mutate(country = factor(country, levels = country))
ggplot(country_users_sorted[(.N-20):.N, ]) +
geom_point(aes(x = country, y = n), size = 4) +
geom_segment(data = country_users_sorted[(.N-20):.N, ], mapping = aes(x = country, xend = country, y = 0, yend = n), size = 1) +
labs(x = "Country", y = "Number of Users", title = "Top-20 countries by users in the academic sector") +
theme_classic() +
scale_y_log10() +
coord_flip() +
theme_minimal()
#country_frequency_institutions <- academic_counts %>% group_by(country) %>% count(wt = n(), sort = TRUE)
country_frequency_users <- academic_counts %>%
mutate(country = tolower(country)) %>%
dt_mutate(country = str_replace_all(country, "korea, republic of", "south korea")) %>%
dt_mutate(country = str_replace_all(country, "russian federation", "russia")) %>%
group_by(country) %>%
count(sort = TRUE, wt = n)
country_users_sorted <- country_frequency_users %>%
arrange(n) %>%
dt_mutate(country = factor(country, levels = country))
ggplot(country_users_sorted[(.N-20):.N, ]) +
geom_point(aes(x = country, y = n), size = 4) +
geom_segment(data = country_users_sorted[(.N-20):.N, ], mapping = aes(x = country, xend = country, y = 0, yend = n), size = 1) +
labs(x = "Country", y = "Number of Users", title = "Top-20 countries by users in the academic sector") +
theme_classic() +
scale_y_log10() +
coord_flip() +
theme_minimal()
#country_frequency_institutions <- academic_counts %>% group_by(country) %>% count(wt = n(), sort = TRUE)
country_frequency_users <- academic_counts %>%
mutate(country = tolower(country)) %>%
dt_mutate(country = str_replace_all(country, "korea, republic of", "south korea")) %>%
dt_mutate(country = str_replace_all(country, "russian federation", "russia")) %>%
group_by(country) %>%
count(sort = TRUE, wt = n)
country_users_sorted <- country_frequency_users %>%
arrange(n) %>%
dt_mutate(country = factor(country, levels = country))
ggplot(country_users_sorted[(.N-20):.N, ]) +
geom_point(aes(x = country, y = n), size = 4) +
geom_segment(data = country_users_sorted[(.N-20):.N, ], mapping = aes(x = country, xend = country, y = 0, yend = n), size = 1) +
labs(x = "Country", y = "Number of Users", title = "Top-20 countries by users in the academic sector") +
theme(plot.title = element_text(size=12, hjust = 0.5)) +
scale_y_log10() +
coord_flip() +
theme_minimal()
#country_frequency_institutions <- academic_counts %>% group_by(country) %>% count(wt = n(), sort = TRUE)
country_frequency_users <- academic_counts %>%
mutate(country = tolower(country)) %>%
dt_mutate(country = str_replace_all(country, "korea, republic of", "south korea")) %>%
dt_mutate(country = str_replace_all(country, "russian federation", "russia")) %>%
group_by(country) %>%
count(sort = TRUE, wt = n)
country_users_sorted <- country_frequency_users %>%
arrange(n) %>%
dt_mutate(country = factor(country, levels = country))
ggplot(country_users_sorted[(.N-20):.N, ]) +
geom_point(aes(x = country, y = n), size = 4) +
geom_segment(data = country_users_sorted[(.N-20):.N, ], mapping = aes(x = country, xend = country, y = 0, yend = n), size = 1) +
labs(x = "Country", y = "Number of Users", title = "Top-20 Countries by Users in Academic Sector") +
theme(plot.title = element_text(size=12, hjust = 0.5)) +
scale_y_log10() +
coord_flip() +
theme_minimal()
#country_frequency_institutions <- academic_counts %>% group_by(country) %>% count(wt = n(), sort = TRUE)
country_frequency_users <- academic_counts %>%
mutate(country = tolower(country)) %>%
dt_mutate(country = str_replace_all(country, "korea, republic of", "south korea")) %>%
dt_mutate(country = str_replace_all(country, "russian federation", "russia")) %>%
group_by(country) %>%
count(sort = TRUE, wt = n)
country_users_sorted <- country_frequency_users %>%
arrange(n) %>%
dt_mutate(country = factor(country, levels = country))
ggplot(country_users_sorted[(.N-20):.N, ]) +
geom_point(aes(x = country, y = n), size = 4) +
geom_segment(data = country_users_sorted[(.N-20):.N, ], mapping = aes(x = country, xend = country, y = 0, yend = n), size = 1) +
theme_minimal() +
labs(x = "Country", y = "Number of Users", title = "Top-20 Countries by Users in Academic Sector") +
theme(plot.title = element_text(size=12, hjust = 0.5)) +
scale_y_log10() +
coord_flip()
#country_frequency_institutions <- academic_counts %>% group_by(country) %>% count(wt = n(), sort = TRUE)
country_frequency_users <- academic_counts %>%
mutate(country = tolower(country)) %>%
dt_mutate(country = str_replace_all(country, "korea, republic of", "south korea")) %>%
dt_mutate(country = str_replace_all(country, "russian federation", "russia")) %>%
group_by(country) %>%
count(sort = TRUE, wt = n)
country_users_sorted <- country_frequency_users %>%
arrange(n) %>%
dt_mutate(country = factor(country, levels = country))
ggplot(country_users_sorted[(.N-20):.N, ]) +
geom_point(aes(x = country, y = n), size = 4) +
geom_segment(data = country_users_sorted[(.N-20):.N, ], mapping = aes(x = country, xend = country, y = 0, yend = n), size = 1) +
theme_minimal() +
labs(x = "Country", y = "Number of Users", title = "Top-20 Countries by Users in Academic Sector") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_log10() +
coord_flip()
us_academic_counts <- academic_counts_sorted %>% filter(country == "United States")
ggplot(us_academic_counts[(.N-20):.N, ]) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = us_academic_counts[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
labs(x = "Academic Institution", y = "Number of Users", title = "Top 20 universities in the United States") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top-20 Universities by Number of Users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.background = element_rect(fill="white",
size=0.5, linetype="solid",
colour ="black"))
us_academic_counts <- academic_counts_sorted %>% filter(country == "United States")
ggplot(us_academic_counts[(.N-20):.N, ]) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = us_academic_counts[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
labs(x = "Academic Institution", y = "Number of Users", title = "Top-20 Universities in the United States") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
us_academic_counts <- academic_counts_sorted %>% filter(country == "United States")
ggplot(us_academic_counts[(.N-20):.N, ]) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = us_academic_counts[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
labs(x = "Academic Institution", y = "Number of Users", title = "Top-20 Universities in the United States") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.4))
us_academic_counts <- academic_counts_sorted %>% filter(country == "United States")
ggplot(us_academic_counts[(.N-20):.N, ]) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = us_academic_counts[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
labs(x = "Academic Institution", y = "Number of Users", title = "Top-20 Universities in the United States") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.35))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top-20 Universities by Number of Users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.35),
axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.background = element_rect(fill="white",
size=0.5, linetype="solid",
colour ="black"))
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top-20 Universities by Number of Users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.3),
axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.background = element_rect(fill="white",
size=0.5, linetype="solid",
colour ="black"))
length(filter(academic_counts, country == "United States")$organization) / length(academic_counts$organization)
# 33% of academic institutions represented are in the U.S.
sum(filter(academic_counts, country == "United States")[, "n"]) / sum(academic_counts[, "n"])
# 54.3% of users in the academic sector are at U.S. institutions
sum(academic_counts[,"n"]) / 2435698
# 1.6% of all users have been matched to an academic institution
# look at percentage of academic sector users in each country
options(scipen = 10)
country_user_percentages <- academic_counts %>% group_by(country) %>%
select(country, n) %>%
summarise(n = sum(n) / sum(academic_counts[, "n"])) %>%
mutate(percentage = round(n, 2))
arrange(-n)
length(filter(academic_counts, country == "United States")$organization) / length(academic_counts$organization)
# 33% of academic institutions represented are in the U.S.
sum(filter(academic_counts, country == "United States")[, "n"]) / sum(academic_counts[, "n"])
# 54.3% of users in the academic sector are at U.S. institutions
sum(academic_counts[,"n"]) / 2435698
# 1.6% of all users have been matched to an academic institution
# look at percentage of academic sector users in each country
options(scipen = 10)
country_user_percentages <- academic_counts %>% group_by(country) %>%
select(country, n) %>%
summarise(n = sum(n) / sum(academic_counts[, "n"])) %>%
mutate(percentage = round(n, 2)) %>%
arrange(-n)
country_user_percentages
# load packages
for (pkg in c("tidyverse", "igraph", "visNetwork", "data.table", "R.utils", "DT"
"RPostgreSQL", "cowplot", "maditr", "stringr", "stringi", "gridExtra")) {library(pkg, character.only = TRUE)}
# load packages
for (pkg in c("tidyverse", "igraph", "visNetwork", "data.table", "R.utils", "DT",
"RPostgreSQL", "cowplot", "maditr", "stringr", "stringi", "gridExtra")) {library(pkg, character.only = TRUE)}
length(filter(academic_counts, country == "United States")$organization) / length(academic_counts$organization)
# 33% of academic institutions represented are in the U.S.
sum(filter(academic_counts, country == "United States")[, "n"]) / sum(academic_counts[, "n"])
# 54.3% of users in the academic sector are at U.S. institutions
sum(academic_counts[,"n"]) / 2435698
# 1.6% of all users have been matched to an academic institution
# look at percentage of academic sector users in each country
options(scipen = 10)
country_user_percentages <- academic_counts %>% group_by(country) %>%
select(country, n) %>%
summarise(n = sum(n) / sum(academic_counts[, "n"])) %>%
mutate(percentage = round(n, 2)) %>%
arrange(-n) %>% select(-n)
datatable(country_user_percentages)
ggplot(academic_counts_sorted[(.N-20):.N, ], aes(color = country)) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = academic_counts_sorted[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
scale_color_manual(values = c("United States" = "#485C99", "China" = "#E57200", "Canada" = "#12B2CE")) +
labs(x = "Academic Institution", y = "Number of Users", color = "Country", title = "Top-20 Universities by Number of Users") +
#theme_classic() +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.3),
axis.text.y = element_text(size = 10),
legend.position = c(.9, .1),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.background = element_rect(fill="white",
size=0.5, linetype="solid",
colour ="black"))
us_academic_counts <- academic_counts_sorted %>% filter(country == "United States")
ggplot(us_academic_counts[(.N-20):.N, ]) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = us_academic_counts[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
labs(x = "Academic Institution", y = "Number of Users", title = "Top-20 Universities in the United States") +
coord_flip() +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.35))
#country_frequency_institutions <- academic_counts %>% group_by(country) %>% count(wt = n(), sort = TRUE)
country_frequency_users <- academic_counts %>%
mutate(country = tolower(country)) %>%
dt_mutate(country = str_replace_all(country, "korea, republic of", "south korea")) %>%
dt_mutate(country = str_replace_all(country, "russian federation", "russia")) %>%
group_by(country) %>%
count(sort = TRUE, wt = n)
country_users_sorted <- country_frequency_users %>%
arrange(n) %>%
dt_mutate(country = factor(country, levels = country))
ggplot(country_users_sorted[(.N-20):.N, ]) +
geom_point(aes(x = country, y = n), size = 4) +
geom_segment(data = country_users_sorted[(.N-20):.N, ], mapping = aes(x = country, xend = country, y = 0, yend = n), size = 1) +
theme_minimal() +
labs(x = "Country", y = "Number of Users", title = "Top-20 Countries by Users in Academic Sector") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_log10() +
coord_flip()
us_academic_counts <- academic_counts_sorted %>% filter(country == "United States")
ggplot(us_academic_counts[(.N-20):.N, ]) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = us_academic_counts[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
labs(x = "Academic Institution", y = "Number of Users", title = "Top-20 Universities in the United States") +
coord_flip() +
theme_minimal() #+ theme(plot.title = element_text(hjust = 0.35))
us_academic_counts <- academic_counts_sorted %>% filter(country == "United States")
ggplot(us_academic_counts[(.N-20):.N, ]) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = us_academic_counts[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
labs(x = "Academic Institution", y = "Number of Users", title = "Top-20 Universities in the United States") +
coord_flip() +
theme_minimal() + theme(plot.title = element_text(hjust = 0.35))
us_academic_counts <- academic_counts_sorted %>% filter(country == "United States")
ggplot(us_academic_counts[(.N-20):.N, ]) +
geom_point(aes(x = organization, y = n), size = 4) +
geom_segment(data = us_academic_counts[(.N-20):.N, ], mapping = aes(x = organization, xend = organization, y = 0, yend = n), size = 1) +
labs(x = "Academic Institution", y = "Number of Users", title = "Top-20 Universities in the United States") +
coord_flip() +
theme_minimal() + theme(plot.title = element_text(hjust = 0.25))
length(filter(academic_counts, country == "United States")$organization) / length(academic_counts$organization)
# 33% of academic institutions represented are in the U.S.
sum(filter(academic_counts, country == "United States")[, "n"]) / sum(academic_counts[, "n"])
# 54.3% of users in the academic sector are at U.S. institutions
sum(academic_counts[,"n"]) / 2435698
# 1.6% of all users have been matched to an academic institution
# look at percentage of academic sector users in each country
options(scipen = 10)
country_user_percentages <- academic_counts %>%
group_by(country) %>%
select(country, n) %>%
summarise(n = sum(n) / sum(academic_counts[, "n"])) %>%
mutate(percentage = round(n, 2)) %>%
arrange(-n) %>% select(-n)
datatable(country_user_percentages)
blogdown::serve_site()
rm(list = ls())
# load packages
for (pkg in c("tidyverse", "igraph", "visNetwork", "data.table", "R.utils", "DT",
"RPostgreSQL", "cowplot", "maditr", "stringr", "stringi", "gridExtra")) {library(pkg, character.only = TRUE)}
# connect to postgresql to get our data
conn <- dbConnect(drv = PostgreSQL(),
dbname = "sdad",
host = "10.250.124.195",
port = 5432,
user = Sys.getenv("db_userid"),
password = Sys.getenv("db_pwd"))
# query the users_gh data from github data
users_gh <- dbGetQuery(conn, "SELECT login, email, company
FROM gh.ctrs_extra")
institutions_hipolabs <- dbGetQuery(conn, "SELECT institution, country, domains FROM hipolabs.universities")
# disconnect from postgresql database
dbDisconnect(conn)
